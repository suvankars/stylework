%h3 Submit your post for sale
.modal-dialog
  .modal-content
    .modal-body
      - if !@sell_product.errors.empty?
        =render 'error_alert'
      #sell-post-container
        = form_for( @sell_product, url: sellers_path)  do |f|
          .form-group
            .input-group
              = f.text_field :name, placeholder: 'Name of your Product',  class: 'form-control', :maxlength => 25
              .input-group-addon
                #card-logo.glyphicon.glyphicon-asterisk
          .form-group
            .input-group
              = f.text_field :location, :input_html =>{:id => 'gmaps-input-address'}, placeholder: 'Your Location or City', class: 'form-control'
              .input-group-addon
                %span.glyphicon.glyphicon-map-marker
            #gmaps-canvas
          .form-group
            .input-group
              = f.text_area :description, size: "20x6", placeholder: 'Some description about your product',  class: 'form-control', :maxlength => 300
              .input-group-addon
                #card-logo.glyphicon.glyphicon-pencil
          .form-group
            .input-group
              = f.text_field :phone_number, placeholder: 'Your Mobile Number', class: 'form-control'
              .input-group-addon
                %span.glyphicon.glyphicon-phone
          .form-group
            .row
              .col-xs-6
                .input-group
                  = f.text_field :model_title, placeholder: 'Model Name', class: 'form-control'
                  .input-group-addon
                    %span.glyphicon.glyphicon-lock
              .col-xs-6
                .input-group
                  = f.text_field :model_size, placeholder: "Model Size", class: 'form-control'
                  .input-group-addon
                    %span.glyphicon.glyphicon-sort
          .form-group
            .row
              .col-xs-6
                .input-group
                  = f.text_field :cost_price, placeholder: 'Actual Price (in INR)', class: 'form-control'
                  .input-group-addon
                    %span.glyphicon.glyphicon-import
              .col-xs-6
                .input-group
                  = f.text_field :price, placeholder: "Selling Price (in INR)", class: 'form-control'
                  .input-group-addon
                    %span.glyphicon.glyphicon-export
          .form-group
            .row
              .col-xs-6
                .input-group
                  = f.text_field :brand_name, placeholder: 'Brand of your Product', class: 'form-control'
                  .input-group-addon
                    %span.glyphicon.glyphicon-bookmark
              .col-xs-3
                .input-group
                  = f.label :purchase_year, 'Year of Purchase'
              .col-xs-3
                .input-group.pull-right
                  = f.select :purchase_year, (Time.now.year).downto(Time.now.year - 100).to_a, class: 'form-control'
          .form-group
            .input-group
              = f.text_area :reason, size: "20x6", placeholder: 'Your Reason for Sale...',  class: 'form-control',  :maxlength => 200
              .input-group-addon
                #card-logo.glyphicon.glyphicon-menu-hamburger
          .form-group
            .input-group
              = f.text_area :short_description, size: "30x6", placeholder: 'Any Special Message...',  class: 'form-control',  :maxlength => 200
              .input-group-addon
                #card-logo.glyphicon.glyphicon-comment
          .form-group
            .input-group
              %a.btn.btn-primary#upload_widget_opener{:href => "#"} Upload few product images
              %ul#images
                %span.status
                .preview

          .form-group
            = f.submit "Save Your Sell Post", class: 'btn btn-success btn-block', data: { disable_with: "In Progress.." }

%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js", :type => "text/javascript"}

%script{:src => "//widget.cloudinary.com/global/all.js", :type => "text/javascript"}
= cloudinary_js_config
:javascript

$(function() {
  var completer;
  completer = new GmapsCompleter({
    inputField: '#product_location',
    errorField: '#gmaps-error'
  });
  completer.autoCompleteInit({
    country: "in"
  })
});
$(function(){
  function rePositionMarkers(data) {
    var data_hash = data;
    var handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
      markers = handler.addMarkers(data_hash);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    });
  }
  $("#delete-btn").click(function(event){
    console.log("From TOP ");
  });
  $("#ajax").click(function(){
    var valuesToSubmit = $('#product_location').val();
    $.ajax({
        type: "GET",
        url: $(this).attr('action'),
        data: { search: valuesToSubmit},
        dataType: "JSON"
    }).success( function(data, status, xhr){
        var listings = data["lists"];
        var geoLocation = data["hash"];
        rePositionMarkers(geoLocation);
        console.log(listings[0]);
        $("tbody#content").empty();

    });
    return false;
  })
});

  $(document).ready(function(){
  var handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(#{raw @hash.to_json });
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
  });
  $.cloudinary.config({ cloud_name: 'dijs1yfba', api_key: '488196417269728'});


    document.getElementById("upload_widget_opener").addEventListener("click", function() {

      cloudinary.openUploadWidget({ cloud_name: 'dijs1yfba', upload_preset: 'sample_a3cb73f3e13fc75f53e20e800352e1b509ee1f7b'},
        function(error, result) { console.log(error, result);
        var preview = $(".preview");
        $(".status").text("");

        var arrayLength = result.length;
        for (var i = 0; i < arrayLength; i++) {
          var imageMetadata = result[i];

          $.cloudinary.image(imageMetadata.public_id, {
              format: result.format, width: 100, height: 100, crop: "fit"
            }).appendTo(preview);

             $('<a/>').
            addClass('delete_by_token').
            attr({href: '#'}).
            html('&times;').
            appendTo(preview).click(function() {
              $.cloudinary.delete_by_token(imageMetadata.delete_token).done(function(){


              }).fail(function() {
                  $('.status').text("Cannot delete image");
                });
          });
        }

        var json_data = { resource_type: "Product", data_value: result }

        $.ajax({
          url : "/images/park_images",
          type : "post",
          data : json_data
        });


        });

    }, false);
